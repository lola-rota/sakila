generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  customer_id Int       @id @default(autoincrement())
  first_name  String    @db.VarChar(45)
  last_name   String    @db.VarChar(45)
  email       String?   @db.VarChar(50)
  activebool  Boolean   @default(true)
  create_date DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  last_update DateTime? @default(now()) @db.Timestamp(6)
  active      Int?
  rental      rental[]

  @@index([last_name], map: "idx_last_name")
}

model film {
  film_id          Int      @id @default(autoincrement())
  title            String   @db.VarChar(255)
  description      String?
  release_year     Int?
  rental_duration  Int      @default(3) @db.SmallInt
  rental_rate      Decimal  @default(4.99) @db.Decimal(4, 2)
  length           Int?     @db.SmallInt
  replacement_cost Decimal  @default(19.99) @db.Decimal(5, 2)
  last_update      DateTime @default(now()) @db.Timestamp(6)
  special_features String[]
  rental           rental[]

  @@index([title], map: "idx_title")
}

model rental {
  rental_id   Int       @id @default(autoincrement())
  rental_date DateTime  @db.Timestamp(6)
  customer_id Int
  film_id     Int
  return_date DateTime? @db.Timestamp(6)
  last_update DateTime  @default(now()) @db.Timestamp(6)
  customer    customer  @relation(fields: [customer_id], references: [customer_id])
  film        film      @relation(fields: [film_id], references: [film_id])
}
